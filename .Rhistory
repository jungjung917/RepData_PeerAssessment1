x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
dim(my_vector)?
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, dim(c(4,5))
)
my_matrix2 <- matrix(1:20, nrow = 4, ncol =5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_matrix)
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
TRUE
(FALSE == TRUE) == FALSE
6 ==7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !== 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE,FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE).
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(int > 7)
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6)))
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?taaply
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$landmasses,flags$population,summary)
tapply(flags$population, flags$landmasses,summary)
tapply(flags$landmass,flags$population,summary)
tapply(flags$population, flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
samples(c(0,1) replace=TRUE, prob = c(0.3,0.7))
samples(c(0,1), 100, replace=TRUE, prob = c(0.3,0.7))
sample(c(0,1), 100, replace=TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob = c(0.3,0.7))
flibs
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois()
rpois(5, lambda = 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 >- strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(car)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(speed~dist,cars)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlabel = "Speed")
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars,main = "My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col =2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
data(mtcars)
?boxplot
boxplot(mpg ~ cyl,data = mtcars)
hist(mtcars$mpg)
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
0.64
0.64
mypdf
integrate(mypdf)
?(mypdf)
?integrate
integrate(mypdf,0,1.6)
sqrt(0.5)
sqrt(2)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version =="3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran,size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran,!is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, county, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df()
cran <- tbl_df(mtdf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- (cran,package)
by_package <- group_by(cran,package)
by_package
summarize(by_package, mean(size))
save()
submit()
reset()
summarize(by_package, mean(size))
ls()
swirl()
submit()
tbl
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- select(pack_sum,count > 679)
top_counts <- select(pack_sum, pack_sum$count > 679)
top_counts <- filter(pack_sum,count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum,unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
install_from_swirl("Regression Models")
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
x * p
sum(x*p)/4
sum(x*p)
0.75 * 0.3 / (0.75* 0.3 + (1-0.52)*(1-0.3))
p <- c(.1, .2, .3, .4)
x <- 2 : 5
x * p
sum(x*p)
sum(x ^ 2 * p) - sum(x * p) ^ 2
library(swilr)
library(swirl)
swirl(0)
0
quit()
rm(ls())
ls
ls()
a <- list(ls())
a
rm(a)
ls
ls()
rm(list(ls()))
x <- c(32,64,128,256,512,1024,2048,4096)
sec <- c(0,0.001,0.015,0.0176,1.789,18.720,200.443,2154.413)
log(x)
lm(log(sec)~log(x))
log(sec)
x <- c(64,128,256,512,1024,2048,4096)
sec <- c(0.001,0.015,0.0176,1.789,18.720,200.443,2154.413)
lm(log(sec)~log(x))
sec <- c(0.001,0.002,0.005,0.016,0.047,0.137,0.404,1.184,3.482,10.227,30,069,88.403,269.767,763.560,2244.247)
log2(sec)
?log()
log(sec)
sec <- c(0.002,0.005,0.016,0.047,0.137,0.404,1.184,3.482,10.227,30,069,88.403,269.767,763.560,2244.247)
16777216 ,33554432,67108864)
N <- c(8192, 16384, 32768 ,65536 ,131072 ,
262144,
524288     ,
1048576    ,
2097152    ,
4194304   ,
8388608  ,16777216 ,33554432,67108864)
log2(sec) / log2(N)
log2(N) / log2(sec)
log2(log2(N) / log2(sec))
log2(log2(sec) / log2(N))
log2(log2(N) / log2(sec))
log2(log2(sec) / log2(N))
log2(sec) / log2(N)
lm(log(sec)~log(N))
sec <- c(0.002,0.005,0.016,0.047,0.137,0.404,1.184,3.482,10.227,30,069,88.403,269.767,763.560,2244.247)
N <- c(8192, 16384, 32768 ,65536 ,131072 ,
262144,
524288     ,
1048576    ,
2097152    ,
4194304   ,
8388608  ,16777216 ,33554432,67108864)
lm(log(sec)~log(N))
sec <- c(0.002,0.005,0.016,0.047,0.137,0.404,1.184,3.482,10.227,30.069,88.403,269.767,763.560,2244.247)
N <- c(8192, 16384, 32768 ,65536 ,131072 ,
262144,
524288     ,
1048576    ,
2097152    ,
4194304   ,
8388608  ,16777216 ,33554432,67108864)
log2(sec)/log(N)
log2(sec)/log2(N)
lm(log(sec)~log(N))
lm(log2(sec)~log2(N))
log2(sec)/log2(N)
log2(N)/log2(sec)
2**64
2^8
2^16
fit1 <- lm(mpg~wt, data=mtcars)
summary(fit1)$coefficients
getwd()
ls
setwd(wdreg)
wdreg <- "/Users/zhengshizhao/lecture_yale/courseea_DEC/part3_FEB/RegressionModel"
setwd(wdreg)
setwd("./week2")
getwd()
library(UsingR)
data(mtcars)
fit1 <- lm(mpg~wt, data=mtcars)
summary(fit1)$coefficients
sumCoef[1,1] + c(-1,1)*qt(0.975, df= fit$df) *sumCoef[1,2]
sumCoef <- summary(fit1)$coefficients
sumCoef[1,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[1,2]
sumCoef[2,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[2,2]
sumCoef[2,1] + c(-3,3)*qt(0.975, df= fit1$df) *sumCoef[2,2]
sumCoef[1,1] + c(-3,3)*qt(0.975, df= fit1$df) *sumCoef[1,2]
predict(fit1, newdata=3, interval='confidence')
predict(fit1, newdata=data.frame(wt=3), interval='confidence')
predict(fit1, newdata=data.frame(wt=1), interval='confidence')
predict(fit1, newdata=data.frame(wt=1/3), interval='confidence')
predict(fit1, newdata=data.frame(wt=3000), interval='confidence')
predict(fit1, newdata=data.frame(wt=3), interval='confidence')
fit2 <- lm(mpg~wt/3, data=mtcars)
fit2 <- lm(mpg~(wt/3), data=mtcars)
fit2 <- lm(mpg~I(wt/3), data=mtcars)
predict(fit2, newdata=data.frame(wt=1), interval='confidence')
predict(fit2, newdata=data.frame(wt=1), interval='confidence')
fit2 <- lm(mpg~I(wt/3), data=mtcars)
fit2
predict(fit2, newdata=data.frame(wt=1/3), interval='confidence')
sumCoef[2,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[2,2]
fit2 <- lm(mpg~wt, data=mtcars)
predict(fit2, newdata=data.frame(wt=3), interval='confidence')
sumCoef[2,1] + c(-3,3)*qt(0.975, df= fit1$df) *sumCoef[2,2]
sumCoef[2,1] + c(-3,3)*qt(0.975, df= fit2$df) *sumCoef[2,2]
fit2 <- lm(mpg~I(wt/3), data=mtcars)
sumCoef[2,1] + c(-3,3)*qt(0.975, df= fit2$df) *sumCoef[2,2]
fit2 <- lm(mpg~I(wt), data=mtcars)
predict(fit2, newdata=data.frame(wt=3), interval='confidence')
fit2 <- lm(I(mpg-mean(mpg)~I(wt-mean(wt)), data=mtcars)
predict(fit2, newdata=data.frame(wt=3), interval='confidence')
fit2 <- lm(I(mpg-mean(mpg))~I(wt-mean(wt)), data=mtcars)
predict(fit2, newdata=data.frame(wt=3), interval='confidence')
fit2 <- lm(mpg~wt), data=mtcars)
fit2 <- lm(mpg~wt, data=mtcars)
predict(fit2, newdata=data.frame(wt=3), interval='confidence')
predict(fit2, newdata=data.frame(wt=3), interval='prediction')
fit3 <- lm(mpg~I(wt/2)), data=mtcars)
fit3 <- lm(mpg~I(wt/2), data=mtcars)
predict(fit3, newdata=data.frame(wt=1), interval='prediction')
fit3 <- lm(mpg~wt, data=mtcars)
predict(fit3, newdata=data.frame(wt=wt/2), interval='prediction')
predict(fit3, newdata=data.frame(wt=1/2), interval='prediction')
predict(fit3, newdata=data.frame(wt=2), interval='prediction')
predict(fit3, newdata=data.frame(wt=2), interval='prediction')
sumCoef[1,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[1,2]
] +
sumCoef[2,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[2,2]
sumCoef[2,1] + c(-2,2)*qt(0.975, df= fit1$df) *sumCoef[2,2]
fit3 <- lm(mpg~I(wt/2), data=mtcars)
sumCoef <- summary(fit3)$coefficients
sumCoef[2,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[2,2]
fit2 <- lm(mpg~wt, data=mtcars)
fit2
fit4 <-lm(mpg~I(wt/-5.344), data=mtcars)
fit4
fit4 <-lm(mpg~I(wt*-5.344), data=mtcars)
fit4
sum(fit2$sigma)
sum(fit4$sigma)
sum(summary(fit2)$sigma)
sum(summary(fit4)$sigma)
sum(resid(fit2)^2)
sum(resid(fit4)^2)
sum(resid(fit2)^2)
sum(resid(fit4)^2)
sum(resid(fit2))
coef(fit2)
summary(fit2)
summary(fit4)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
n<- length(y)
fit <- lm(I(y-mean(y))~I(x-mean(x)))
summary(fit)$coefficients
resid(fit)
summary(fit)$sigma
sqrt(sum(resid(fit)^2)/(n-2))
fit1 <- lm(mpg~wt, data=mtcars)
sumCoef[1,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[1,2]
sumCoef[2,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[2,2]
fit1 <- lm(mpg~wt, data=mtcars)
sumCoef <- summary(fit1)$coefficients
sumCoef[1,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[1,2]
sumCoef[2,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[2,2]
predict(fit2, newdata=data.frame(wt=mean(mtcars$wt)), interval='prediction')
predict(fit1, newdata=data.frame(wt=mean(mtcars$wt)), interval='prediction')
fit1 <- lm(mpg~wt, data=mtcars)
sumCoef <- summary(fit1)$coefficients
predict(fit1, newdata=data.frame(wt=mean(mtcars$wt)), interval='prediction')
predict(fit1, newdata=data.frame(wt=mean(mtcars$wt)), interval='prediction')
predict(fit1, newdata=data.frame(wt=mean(mtcars$wt)), interval='confident')
predict(fit1, newdata=data.frame(wt=mean(mtcars$wt)), interval='confidence')
fit3 <- lm(mpg~I(wt/2), data=mtcars)
sumCoef <- summary(fit3)$coefficients
sumCoef[2,1] + c(-1,1)*qt(0.975, df= fit1$df) *sumCoef[2,2]
fit <- lm(mpg~wt, data=mtcars)
yhat <- predict(fit, newdata=data.frame(wt=mtcars$wt))
sum((mtcars$mpg-yhat)^2)/ sum((mtcars$mpg-ymean)^2)
sum((mtcars$mpg-yhat)^2)/ sum((mtcars$mpg-mean(mtcars$mpg))^2)
pwd
setwd("/Users/zhengshizhao/lecture_yale/courseea_DEC/part2_JAN/PeproducibleResearch/week2/RepData_PeerAssessment1")
library(knitr)
source("PA1_template.Rmd")
sourse("PA1_template.Rmd")
source("PA1_template.Rmd")
?source
knit('PA1_template.Rmd', 'PA1_template.md')
